#directorio <- "/home/mp3/Dropbox/00proyectos/aena/data/20140428/"
fichero <- paste(directorio,"camas.csv",sep="")
camas <- read.csv(fichero,header=TRUE,sep=";")
View(camas)
fichero <- paste(directorio,"countryCodes.csv",sep="")
countries <- read.csv(fichero,header=FALSE,sep=";")
View(countries)
fichero <- paste(directorio,"paxForeignMonths.csv",sep="")
pasajeros <-  read.csv(fichero,header=TRUE,sep=";")
View(pasajeros)
fichero <- paste(directorio,"hicp.csv",sep="")
hicp <- read.csv(fichero,header=TRUE,sep=";")
View(hicp)
fichero <- paste(directorio,"gdp.csv",sep="")
gdp <- read.csv(fichero,header=TRUE,sep=";")
View(gdp)
# country names
cn <- countries$V2
# country short
scn <- countries$V1
#for (country in countries){
country <- as.character(scn[5])
pax <- pasajeros[,c("year","month",country)]
View(pax)
#columnNames <-c("pax4m","pax3m","pax2m","pax1m","gdp","relhicp","pax")
#columnNames <-c("hh","h1","h2","h3","pax2m","pax1m","gdp","relhicp","pax")
columnNames <-c("month","paxpm","gdp","relhicppm","relhicpcm","paxcm")
numPastMonthsPax <- 9
numPastMonthsHicp <- 6
datos <- data.frame(matrix(0.0,nrow=1,ncol=length(columnNames)))
colnames(datos) <- columnNames
View(datos)
month <- lastMonth
year <- lastYear
contador <- 1
while (year>=firstYear & month>=firstMonth){
# add month
fila <- month
fila <- month
# add numPastMonthsPax previous months passengers form country
rowInt <- which(pax$year==year & pax$month==month)
paxLM <- pax[rowInt+1:rowInt+1+numPastMonthsPax,3]
fila <- c(fila,log10(mean(paxLM)))
# add country gdp for previous year
fila <- c(fila,gdp[which(gdp$year==year-1),country])
# add  numPastMonthsHicp months hicp relation mean form country
rowInt <- which(hicp$year==year & hicp$month==month)
hicpLM <- hicp[rowInt+1:rowInt+1+numPastMonthsHicp,c("ES",country)]
fila <- c(fila,mean(hicpLM[1]/hicpLM[2]))
# add relation between hicp for country and hicp for spain in the current month
fila <- c(fila,hicp[rowInt,"ES"]/hicp[rowInt,country])
# add passengers form the country the current month
fila <- c(fila,log10(pax[pax$year==year & pax$month==month,3]))
# add row to data frame
datos[contador,] <- fila
rownames(datos)[contador] <- paste(as.character(year),"-",as.character(month),sep="")
# go one month in the past for next loop
contador <- contador + 1
month <- month - 1
if(month==0){
month <- 12
year <- year - 1
}
}
expresion <- paste(columnNames[length(columnNames)],"~",paste(columnNames[1:length(columnNames)-1], collapse = '+'),sep="")
View(datos)
View(pax)
View(hicp)
View(gdp)
source('C:/Users/mpintor/Dropbox/00proyectos/aena/data/20150519/neuralNet06.R', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00proyectos/aena/data/20150519/plot covariates.R', echo=TRUE)
for (i in 1:(dim(datosS)[2]-1)){
gwplot(NNet,selected.covariate=colnames(datosS)[i])
}
source('C:/Users/mpintor/Dropbox/00proyectos/aena/data/20150519/neuralNet06.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
neuronas
totError
source('~/.active-rstudio-document', echo=TRUE)
totError
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
totError
source('~/.active-rstudio-document', echo=TRUE)
totError
x  <- seq(1, dim(datosS)[1])
y1 <- 10^exp(datosS[,dim(datosS)[2]])
y2 <- 10^exp(res$net.result)
df <- data.frame(x,y1,y2)
totError<- sum ((df$y1-df$y2)^2)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), colour="red") +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
source('~/.active-rstudio-document', echo=TRUE)
require("plotrix")
install.packages("plotrix")
install.packages("akima")
install.packages("fields")
install.package("rgdal")
install.packages("fields")
install.packages("rgdal")
require(rgdal)
ogrDrivers()$name
theUrl <- "http://www.santacruzdetenerife.es/opendata/dataset/0632e535-96ba-43f6-b28d-be4f9d6a9baa/resource/2ad11b6b-6380-4fb0-8be3-a8b3a42f76bb/download/viales.geojson"
theUrl <- "http://www.santacruzdetenerife.es/opendata/dataset/0632e535-96ba-43f6-b28d-be4f9d6a9baa/resource/2ad11b6b-6380-4fb0-8be3-a8b3a42f76bb/download/viales.geojson"
viales <- download.file(theUrl,viales.geojson)
viales <- download.file(theUrl,"viales.geojson")
getwd()
require(rgdal)
mapa <- readOGR("viales.geojson","OGRGeoJSON")
plot(mapa)
install_github("rgbif", "ropensci", ref="newapi")
library(devtools)
install_github("rgbif", "ropensci", ref="newapi")
library(rgbif)
install_github("rgbif", "ropensci", ref="newapi")
install.packages("rgbif")
library(rgbif)
gist("viales.geojson", description = "Viales SC Tenerife")
require(forecast)
install.packages("rjson")
library("rjson")
posts <- json_data(file="C:\Users\mpintor\Dropbox\00proyectos\visionarios\bd\wp_posts.json")
posts <- json_data(file="C:\\Users\\mpintor\\Dropbox\\00proyectos\\visionarios\\bd\\wp_posts.json")
require(rjson)
posts <- json_data(file="C:\\Users\\mpintor\\Dropbox\\00proyectos\\visionarios\\bd\\wp_posts.json")
posts <- fromJSON(file="C:\\Users\\mpintor\\Dropbox\\00proyectos\\visionarios\\bd\\wp_posts.json")
?fromJSON
posts <- fromJSON(file="C:\\Users\\mpintor\\Dropbox\\00proyectos\\visionarios\\bd\\wp_posts2.json")
posts
class(posts)
table(posts)
summary(posts)
head(posts)
posts[[1]]
posts$id
posts[[]]$id
posts[[1]]$id
posts[[1]]
posts$ID
posts[[]]$ID
posts[[2]]
length(posts)
load("C:/Users/mpintor/Dropbox/00 expediente disciplinario/conservaciones/partes_operacion.Rda")
partes <- readRDS("C:/Users/mpintor/Dropbox/00 expediente disciplinario/conservaciones/partes_operacion.Rda")
View(partes)
tf1 <- subset(partes,carretera=="TF-1")
tramo <- subset(tf1,final<=20.0)
tramo <- subset(tf1,fin<=20.0)
table(tramo$operacion)
table(tf1)
table(tf1$operacion)
source('C:/Users/mpintor/Dropbox/00R/programas/ver data frame en excel.R', echo=TRUE)
viewExcel(tf1)
partes
kk <- partes[order(inicio),]
kk <- partes[order(partes$inicio),]
?kable
kk <- read.csv("C:\Users\mpintor\Dropbox\00 expediente disciplinario\00juzgado\costeVigilancia.prn",sep=",")
kk <- read.csv("C:\\Users\\mpintor\\Dropbox\\00 expediente disciplinario\\00juzgado\\costeVigilancia.prn",sep=",")
kk <- read.csv("C:\\Users\\mpintor\\Dropbox\\00 expediente disciplinario\\00juzgado\\costeVigilancia.csv",sep=",")
kk <- read.csv("C:\\Users\\mpintor\\Dropbox\\00 expediente disciplinario\\00juzgado\\costeVigilancia.csv",sep=",")
kk <- read.csv("C:\\Users\\mpintor\\Dropbox\\00 expediente disciplinario\\00juzgado\\costeVigilancia.csv",sep=";")
View(kk)
View(kk)
Por que no funciona bien *"el italico de las palabrasXX"*
install.packages("cacher")
library(cacher)
install.packages("cacher",type="source")
options(install.packages.check.source="no")
install.packages("cacher",type="source")
install.packages("cacher",type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/cacher/cacher_1.1-2.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
library(pandoc)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(partes_fecha_obra_TF1)
View(partes)
tail(partes)
partes_fecha_obra_TF1
View(partes)
partes <- readRDS("C:\\Users\\mpintor\\Dropbox\\00proyectos\\datosCONS\\operaciones_sur.Rda")
partes_fecha_obra_TF1 <- subset(partes ,  carretera=="TF-1" & fecha >= as.Date("2013-08-01","%Y-%m-%d") & fecha <=as.Date("2013-12-31","%Y-%m-%d"))
class(partes$fecha)
partes <- readRDS("C:\\Users\\mpintor\\Dropbox\\00proyectos\\datosCONS\\operaciones_sur.Rda")
partes$fecha <- as.Date(partes$fecha,"%d/%m/%Y")
partes_fecha_obra_TF1 <- subset(partes ,  carretera=="TF-1" & fecha >= as.Date("2013-08-01","%Y-%m-%d") & fecha <=as.Date("2013-12-31","%Y-%m-%d"))
hist(partes_fecha_obra_TF1$pk.fin)
source('~/.active-rstudio-document', echo=TRUE)
partes_fecha_obra_TF1 <- subset(partes ,  carretera=="TF-1" & fecha >= as.Date("2011-02-01","%Y-%m-%d") & fecha<=as.Date("2012-08-31","%Y-%m-%d"))
op_20km <- subset(partes_fecha_obra_TF1, pk.fin < 20)
count(po_20km)
nrow(op_20km)
partes_recibida_TF1 <- subset(partes ,  carretera=="TF-1" & fecha >= as.Date("2014-01-01","%Y-%m-%d") & fecha<=as.Date("2015-07-31","%Y-%m-%d"))
hist(partes_recibida_TF1$pk.fin, col="coral3", main="",xlab="PK",ylab="NÂº operaciones")
op_20km <- subset(partes_recibida_TF1, pk.fin < 20)
perc <- nrow(op_20km)/nrow(partes_recibida_TF1)
View(partes)
max(partes$pk.fin)
which(max(partes$pk.fin))
which.max(partes$pk.fin)
partes[2657]
partes[2657,]
partes[26757,]
partes[26757,pk.fin]<-21
partes[26757,"pk.fin"]<-21
partes[26757,]
which.max(partes$pk.fin)
partes[11404,]
partes[11404,"pk.fin"]<-9.9
which.max(partes$pk.fin)
partes[52213,]
which.max(partes$pk.fin)
partes[52213,"pk.fin"]<-80.9
which.max(partes$pk.fin)
partes[5329,]
partes[5329,"pk.fin"]<-83
which.max(partes$pk.fin)
partes[9245,]
q()
runif(1000)
?runif
hist(runif(1000))
hist(runif(10000))
hist(runif(100000))
hist(runif(1000000))
hist(runif(10000000))
hist(runif(100000000))
hist(runif(100000000))
rexp(100,.2)
hist(rexp(100,.2))
hist(rexp(100000,.2))
?rexp
summarize(runif(100))
str(runif(100))
summarize
?summarize
summary(runif(100))
summary(runif(100000))
summary(runif(100000000))
quinf(1000)
qunif(1000)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
pbeta(.75,2,1)
?pbeta
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
x <- seq(init+longi, nrow(testeo))
plot(x,testeo[seq(init+longi, nrow(testeo))]$y, type="l", col="green")
lines(x, testeo[seq(init+longi, nrow(testeo))]$predict, col="red")
plot(x,testeo[seq(init+longi, nrow(testeo)),"y"], type="l", col="green")
lines(x, testeo[seq(init+longi, nrow(testeo)),"predict"], col="red")
x <- seq(init+longi, nrow(testeo))
plot(x,testeo[x,"y"], type="l", col="green")
lines(x, testeo[x,"predict"], col="red")
testeo[x,"y"]
x
testeo[102424,"y"]
View(testeo)
init+longi
nrow(testeo)
x <- seq(nrow(testeo)-prev, nrow(testeo))
plot(x,testeo[x,"y"], type="l", col="green")
lines(x, testeo[x,"predict"], col="red")
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
View(cc.train)
dato <- cc.train[1]
dato
dato <- cc.train[,1]
dato
cctrain[1,]
cc.train[1,]
prev
dato <- cc.train[1,]
dato
respuesta <- h2o.predict(deepLearn,dato)
respuesta
respuesta[1,1]
ncol(dato)
seq(ncol(dato),3)
dato
respuesta <- h2o.predict(deepLearn,dato)
for(j in seq(ncol(dato),3)){
dato[1,j] <- dato[1,j-1]
}
dato[1,41]
dato[1,40]
dato[1,41] <- dato[1,40]
dato
dato <- cc.train[1,]
respuesta <- h2o.predict(deepLearn,dato)
for(j in seq(ncol(dato),3)){
dato[1,j] <- dato[1,j-1]
}
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
dato[1,2]
dato[1,3]
dato[1,4]
dato[1,8]
seq(ncol(dato),3)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
j
dato[1,j]<-dato[1,j-1]
kk<-dato[1,j-1]
dato[1,j]
dato[1,j-1]
dato[1,(j-1)]
dato[1,as.numeric(j-1)]
k<-j-1
dato[1,k]
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
resultados <- NULL
dato <- cc.train[1,]
for (i in seq(1,prev)){
respuesta <- h2o.predict(deepLearn,dato)
for(j in seq(ncol(dato),3)){
k<-j-1
dato[1,j] <- dato[1,k]
}
dato [1,2] <- respuesta[1,1]
resultados <- c(resultados,respuesta[1,1])
}
deepLearn
resultados <- NULL
dato <- cc.train[1,]
for (i in seq(1,prev)){
respuesta <- h2o.predict(deepLearn,dato)
for(j in seq(ncol(dato),3)){
k<-j-1
dato[1,j] <- dato[1,k]
}
dato [1,2] <- respuesta[1,1]
resultados <- c(resultados,respuesta[1,1])
}
## a predecir
resultados <- NULL
dato <- cc.train[1,]
for (i in seq(1,prev)){
print(i)
respuesta <- h2o.predict(deepLearn,dato)
for(j in seq(ncol(dato),3)){
k<-j-1
dato[1,j] <- dato[1,k]
}
dato [1,2] <- respuesta[1,1]
resultados <- c(resultados,respuesta[1,1])
}
resultados <- NULL
dato <- cc.train[1,]
for (i in seq(1,prev)){
print(i)
respuesta <- h2o.predict(deepLearn,dato)
for(j in seq(ncol(dato),3)){
k<-j-1
dato[1,j] <- dato[1,k]
}
dato [1,2] <- respuesta[1,1]
resultados <- c(resultados,respuesta[1,1])
resultados
}
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
install.packages("sp")
j
k
k<-j-1
k
dato[1,j] <- dato[1,k]
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
dato[1,jj] <- dato[1,kk]
dato[1,jj] <- dato[1,kk]
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
resultados
x <- seq(1,nrow(testeo))
plot(x,testeo[x,"y"], type="l", col="green")
x <- seq(nrow(testeo)-prev, nrow(testeo))
plot(x,testeo[x,"y"], type="l", col="green")
lines(resultados, testeo[x,"predict"], col="red")
length(x)
length(resultados)
x <- seq(nrow(testeo)-prev+1, nrow(testeo))
plot(x,testeo[x,"y"], type="l", col="green")
lines(resultados, testeo[x,"predict"], col="red")
lines(x, resultados, col="red")
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
testeo <- cbind(as.data.frame(res),as.data.frame(cc.test$y))
View(testeo)
source('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
aux
nrow(y)
y
length(y)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
teleFile <-  "C:\\Users\\mpintor\\Dropbox\\00R\\programas\\viento\\teleferico\\datos_full_level6.txt"
#load complete file
completo <- read.table(teleFile)
#inicio del bloque de datos a utiliaza para el aprendizaje
init <- 72437
#longitud del bloque de datos de aprendizaje
longi <- 3000
#longitud del bloque de datos a predecir (a partir del bloque de datos de aprendizaje)
prev <- 144
#numero de datos anteriores a utilizar al que se predice
nPrevios <- 1440
#vector con los datos de viento
y <- completo$V5
#moveable average (odd number)
pointsAverage <- 13
aux <- (pointsAverage-1)/2
averaged <- NULL
for(i in seq(aux,length(y)-aux)){
average <- 0.0
for(j in seq(i-aux,i+aux)){
average <- average + y[j]
}
average <- average/pointsAverage
averaged <- c(averaged,average)
}
averaged
average
averaged
teleFile <-  "C:\\Users\\mpintor\\Dropbox\\00R\\programas\\viento\\teleferico\\datos_full_level6.txt"
#load complete file
completo <- read.table(teleFile)
#inicio del bloque de datos a utiliaza para el aprendizaje
init <- 72437
#longitud del bloque de datos de aprendizaje
longi <- 3000
#longitud del bloque de datos a predecir (a partir del bloque de datos de aprendizaje)
prev <- 144
#numero de datos anteriores a utilizar al que se predice
nPrevios <- 1440
#vector con los datos de viento
y <- completo$V5
#moveable average (odd number)
pointsAverage <- 13
aux <- (pointsAverage-1)/2
medias <- NULL
for(i in seq(aux,length(y)-aux)){
average <- 0.0
for(j in seq(i-aux,i+aux)){
average <- average + y[j]
}
average <- average/pointsAverage
medias <- c(medias,average)
}
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/mpintor/Dropbox/00R/programas/viento/NNviento02.R', encoding = 'UTF-8', echo=TRUE)
medias
g <- ggplot(compare, aes(id))
g <- g + geom_line(aes(y=prev), colour="red")
g <- g + geom_line(aes(y=real), colour="green")
g
teleFile <-  "C:\\Users\\mpintor\\Dropbox\\00R\\programas\\viento\\teleferico\\datos_full_level6.txt"
#load complete file
completo <- read.table(teleFile)
head(completo)
tail(completo)
aggAcData <- aggregate(completo,by=list(completo$V8),count,na.rm=TRUE)
aggAcData <- aggregate(completo,by=list(completo$V8),count(),na.rm=TRUE)
aggAcData <- aggregate(completo,by=list(completo$V8),mean,na.rm=TRUE)
aggAcData
separado <- split(completo,completo$V8)
separado
summary(separado)
str(separado)
str(separado)
aggAcData <- aggregate(completo,by=list(completo$V8),mean,na.rm=TRUE)
aggAcData
source('~/.active-rstudio-document', echo=TRUE)
setwd("C:/Users/mpintor/Dropbox/00R/reproResearch/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
View(filledDataSet)
View(aggFilledDataWD)
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
library(knitr)
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("C:\\Users\\mpintor\\Dropbox\\00R\\reproResearch\\RepData_PeerAssessment1\\PA1_template.Rmd")
